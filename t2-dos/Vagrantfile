# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.hostmanager.enabled = false
  config.hostmanager.manage_guest = true
  config.hostmanager.include_offline = true
   
  config.vm.define :host1 do |kvm|
    kvm.vm.box = "centos/7"
    kvm.vm.hostname = "host1.local"

    kvm.vm.provider :libvirt do |domain|
      domain.memory = 2048
      domain.cpus = 1
    end
    kvm.vm.provision "shell", inline: "sudo yum install -y epel-release"
    kvm.vm.provision :host_shell do |host_shell|
      # HACK! do some undocumented hacks under the cover
      host_shell.inline = "virsh vcpupin `cat .vagrant/machines/host1/libvirt/id` 0 0"
    end
    kvm.vm.provision :hostmanager
  end

  config.vm.define :host2 do |kvm|
    kvm.vm.box = "centos/7"
    kvm.vm.hostname = "host2.local"

    kvm.vm.provider :libvirt do |domain|
      domain.memory = 2048
      domain.cpus = 1
    end
    kvm.vm.provision "shell", inline: "sudo yum install -y epel-release"
    kvm.vm.provision :host_shell do |host_shell|
      # HACK! do some undocumented hacks under the cover
      host_shell.inline = "virsh vcpupin `cat .vagrant/machines/host2/libvirt/id` 0 1"
    end
    kvm.vm.provision :hostmanager
  end

  config.vm.define :monitor do |kvm|
    kvm.vm.box = "centos/7"
    kvm.vm.hostname = "monitor.local"

    kvm.vm.provider :libvirt do |domain|
      domain.memory = 2048
      domain.cpus = 1
    end
    kvm.vm.provision "shell", inline: "sudo yum install -y epel-release"
    kvm.vm.provision "shell", inline: "sudo yum install -y docker && sudo chkconfig docker on && sudo service docker start"
    kvm.vm.provision "shell", inline: "sudo yum install -y python-pip && sudo pip install docker-compose"
    kvm.vm.provision :hostmanager
  end

end
